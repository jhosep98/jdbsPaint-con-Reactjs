{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["canvas","currentPos","lastPos","isMouseDown","cx","currentTool","relativePos","event","element","rect","getBoundingClientRect","x","Math","floor","clientX","left","y","clientY","top","LineToolBase","beginPath","moveTo","lineTo","stroke","Herramientas","line","globalCompositeOperation","lineCap","eraser","text","prompt","pos","font","max","lineWidth","fillText","spray","radius","area","PI","dotsPerTick","ceil","this","setInterval","_","i","offset","randomPointInRadius","fillRect","random","clearInterval","setCurrentTool","toolName","CurrentToolClass","initialize","Tools","toolsOption","map","tools","key","toString","onChange","target","value","Size","listOption","n","Color","_props","type","fillStyle","strokeStyle","loadImageURL","url","image","document","createElement","addEventListener","color","size","width","height","drawImage","src","Openfile","className","files","length","reader","FileReader","result","readAsDataURL","Openurl","input","onSubmit","preventDefault","ref","node","Save","onClick","setAttribute","toDataURL","style","display","body","appendChild","click","removeChild","App","onMouseDown","ev","onMouseUp","getContext","onMouseMove","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4f9f2129.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nlet canvas;\nlet currentPos;\nlet lastPos;\nlet isMouseDown;\nlet cx;\nlet currentTool;\n\n\n\nfunction relativePos(event, element) {\n  let rect = element.getBoundingClientRect();\n\n  return {\n    x: Math.floor(event.clientX - rect.left),\n    y: Math.floor(event.clientY - rect.top)\n  };\n}\n\nclass LineToolBase {\n  onMouseMove(event) {\n    if (isMouseDown) {\n      cx.beginPath();\n      cx.moveTo(lastPos.x, lastPos.y);\n      cx.lineTo(currentPos.x, currentPos.y);\n      cx.stroke();\n    }\n  }\n}\n\nclass LineTool extends LineToolBase {\n  constructor() {\n    super();\n    cx.globalCompositeOperation = \"source-over\";\n    cx.lineCap = \"round\";\n  }\n}\n\nclass Eraser extends LineToolBase {\n  constructor() {\n    super();\n    cx.globalCompositeOperation = \"destination-out\";\n  }\n}\n\nclass Text {\n  onMouseDown(event) {\n    const text = prompt(\"text:\", \"\");\n    if (text) {\n      const pos = relativePos(event, cx.canvas);\n      cx.font = Math.max(7, cx.lineWidth) + \"px sans-serif\";\n      cx.fillText(text, pos.x, pos.y);\n    }\n  }\n}\n\nclass Spray {\n  onMouseDown() {\n    let radius = cx.lineWidth / 2;\n    let area = radius * radius * Math.PI;\n    let dotsPerTick = Math.ceil(area / 30);\n    this.spray = setInterval(_ => {\n      for (let i = 0; i < dotsPerTick; i++) {\n        let offset = this.randomPointInRadius(radius);\n        cx.fillRect(currentPos.x + offset.x, currentPos.y + offset.y, 1, 1);\n      }\n    }, 25);\n  }\n  randomPointInRadius(radius) {\n    for (;;) {\n      var x = Math.random() * 2 - 1;\n      var y = Math.random() * 2 - 1;\n      if (x * x + y * y <= 1) return { x: x * radius, y: y * radius };\n    }\n  }\n\n  onMouseUp() {\n    clearInterval(this.spray);\n  }\n}\n\nconst Herramientas = {\n  line: LineTool,\n  eraser: Eraser,\n  text: Text,\n  spray: Spray\n};\n\nconst setCurrentTool = toolName => {\n  const CurrentToolClass = Herramientas[toolName];\n  currentTool = new CurrentToolClass();\n  currentTool.initialize && currentTool.initialize();\n};\n\nfunction Tools() {\n    const tools = [\"line\",\"eraser\",\"text\",\"spray\"];\n    const toolsOption = tools.map((tools)=> <option key={tools.toString()}>{tools}</option>)\n  return (\n    <span>\n      tools:\n      <select onChange={event => setCurrentTool(event.target.value)}>\n        {toolsOption}\n      </select>\n    </span>\n  );\n}\n\n\nfunction Size() {\n  const numbers = [1, 2, 3, 5, 8, 12, 25, 35, 50, 75, 100];\n  const listOption = numbers.map((n) => <option key={n.toString()}>{n}</option>);\n  \n  return (\n    <span>\n      Font Size:\n      <select\n        onChange={event => {\n          cx.lineWidth = event.target.value;\n        }}\n      >\n      {listOption}\n      </select> \n    </span>\n  );\n\n}\n\n\n\nfunction Color(_props) {\n  return (\n    <span>\n      color:\n      <input\n        type=\"color\"\n        onChange={event => {\n          cx.fillStyle = event.target.value;\n          cx.strokeStyle = event.target.value;\n        }}\n      />\n    </span>\n  );\n}\n\nfunction loadImageURL(url) {\n  let image = document.createElement(\"img\");\n  image.addEventListener(\"load\", function() {\n    let color = cx.fillStyle,\n      size = cx.lineWidth;\n    cx.canvas.width = image.width;\n    cx.canvas.height = image.height;\n    cx.drawImage(image, 0, 0);\n    cx.fillStyle = color;\n    cx.strokeStyle = color;\n    cx.lineWidth = size;\n  });\n  image.src = url;\n}\n\nfunction Openfile() {\n  return (\n    <div>\n      Openfile:\n      <input\n        className=\"click\"\n        type=\"file\"\n        onChange={event => {\n          if (event.target.files.length === 0) return;\n          const reader = new FileReader();\n          reader.addEventListener(\"load\", function() {\n            loadImageURL(reader.result);\n          });\n          reader.readAsDataURL(event.target.files[0]);\n        }}\n      />\n    </div>\n  );\n}\n\nfunction Openurl() {\n  let input;\n\n  return (\n    <form\n      className=\"form\"\n      onSubmit={event => {\n        event.preventDefault();\n        loadImageURL(input.value);\n      }}\n    >\n      Open URL:\n      <input\n        className=\"input\"\n        type=\"text\"\n        ref={node => {\n          input = node;\n        }}\n      />\n      <button type=\"submit\">load</button>\n    </form>\n  );\n}\n\nfunction Save() {\n  return (\n    <button\n      onClick={event => {\n        event.preventDefault();\n        const element = document.createElement(\"a\");\n\n        element.setAttribute(\"href\", cx.canvas.toDataURL());\n        element.setAttribute(\"download\", \"asdf.jpg\");\n        element.style.display = \"none\";\n        document.body.appendChild(element);\n\n        element.click();\n\n        document.body.removeChild(element);\n      }}\n    >\n      Save\n    </button>\n  );\n}\n\n\nfunction App(_props) {\n  return (\n    <div>\n      <div>\n       <h1 className=\"title\">Welcome!</h1>\n        <div className=\"picture-panel\">\n          <canvas\n            height=\"500\"\n            width=\"800\"\n            className=\"canvas\"\n            onMouseDown={ev => {\n              isMouseDown = true;\n              currentTool.onMouseDown && currentTool.onMouseDown(ev);\n            }}\n            onMouseUp={ev => {\n              isMouseDown = false;\n              currentTool.onMouseUp && currentTool.onMouseUp(ev);\n            }}\n            ref={node => {\n              canvas = node;\n              cx = canvas.getContext(\"2d\");\n              cx.fillStyle = \"white\";\n              cx.fillRect(0, 0, canvas.width, canvas.height);\n              cx.fillStyle = \"black\";\n              setCurrentTool(\"line\");\n            }}\n            onMouseMove={ev => {\n              lastPos = currentPos;\n              currentPos = relativePos(ev, cx.canvas);\n              currentTool.onMouseMove && currentTool.onMouseMove(ev);\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"flex-container\">\n        <div>\n          <Tools />\n        </div>\n        <div>\n          <Size />\n        </div>\n        <div>\n          <Color />\n        </div>\n        <div>\n          <Openfile />\n        </div>\n        <div>\n          <Openurl />\n        </div>\n        <div>\n          <Save />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}